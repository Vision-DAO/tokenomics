#+NAME: Vision DAO Tokenomics Simulation
#+DATE: 08/15/2022
#+AUTHOR: Dowland Aiello, Lawrence Qupty
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}

* Simulating Vision DAO Tokenomics for Determining Efficiency

Described below is an experiment conducted through a dynamical systems model[fn:1] using the radCAD software. It encodes the behaviors described in the [[https://docs.google.com/document/d/1E_eEqxaBaR9nsZocqP9tPOKYcGYXYcRplaZ0z4U9crY/edit?usp=sharing][Vision tokenomics paper]]. The main goal of the experiment is to theoretically model the efficiency of security measures that arise from Vision's tokenomics, namely the proof of storage and proof of identity uniqueness mechanisms.

[fn:1] From [[https://en.wikipedia.org/w/index.php?title=Dynamical_system&oldid=1096408559][*Wikipedia, The Free Encyclopedia.* "Dynamical system."]]: A dynamical system is a system in which a function describes the time dependence of a point in an ambient space. Examples include the mathematical models that describe the swinging of a clock pendulum, the flow of water in a pipe, the random motion of particles in the air, and the number of fish each springtime in a lake.


This experiment is conducted in two parts, each measuring efficiency through different metrics of these two security mechanisms, respectively.
The implementation of this experiment is available in full [[https://github.com/vision-dao/tokenomics][here]].

It should be noted that the absolute numbers presented in the results of running this model are for illustrative purposes only, and are only indicative of general trends, at best.

** Summary
Repeated experimentation conforming to the described methodology suggests that Vision's file storage and voting security mechanisms reliably deter Sybil attacks[fn:2], and theft of paid-for storage space. In experiments conducted to assess the efficacy of Vision's proof of storage mechanism with collateral rates at 100%, storage theft rates were close to zero (0% - 0.5%). In experiments conducted to assess the efficacy of Vision's voting Sybil attack prevention system, Sybil attackers were found guilty and slashed at a rate approaching 100% as the number of users grew.
Vision's tokenomics mechanisms were found to achieve a high level of security while inhibiting normal usage to a minimal degree. In this regard, it appeared that the ability of users to acquire storage from sellers quickly was correlated with higher levels of liquidity in currency markets for VIS, while the rate of false positives due to the Sybil resistance mechanism decreased with scale.

[fn:2] A Sybil attack constitutes a single Vision user attempting to present themselves through many different identities. Vision's Sybil deterrence mechanism focuses on mitigating situations where this attack allows one user to have a greater weight than they would otherwise in quadratic voting elections.


* File System Model

The file system model encodes the staking, slashing, and market behaviors of Vision's file storage mechanism. It measures "efficiency" through three main metrics: *resistance*, *resilience*, and *reactivity*. *Resistance* describes the ability of the system to withstand and discourage attacks by malicious actors, and is measured by the rate of "stealing," or agreeing to serve a file for a period of time, and purposely or unintentionally (e.g., due to hard drive failure) neglecting to do so. *Resilience* describes the ability of the system to retain users, and grow in adverse conditions (e.g., where a high number of actors are attempting to "game" the system, or when very little storage is available to go around due to physical constraints). *Reactivity* describes the ability of the system to scale with increased demand, in such a way that the most users are fulfilled at the lowest possible cost, and is measured through demanded capacity vs provided capacity.
** Methodology

The file system model makes several assumptions about external factors that influence the decision-making of its users. These include:

- Grants per Block (VIS): The rate at which Vision DAO doles out grants of VIS to users.
- Grant portion (%): The percentage of its balance that Vision DAO is willing to give out as grants.
- Average contract length: How long users' storage contracts with Vision providers tend to be. A normal distribution with values specified in the [[https://github.com/vision-dao/tokenomics/blob/main/analysis.org][analysis file]].
- User Spawn Rate: How often new users join the Vision network, described relative to the number of current users. (i.e., how many users does 1 user attract?)
- Idea Spawn Rate: How often Vision users come up with Ideas that they want serviced via the file storage network.

Several other model parameters are described more extensively in the source code repository, available upon request. Most importantly, the experiment assumes that the price of VIS oscillates completely randomly and that only one initial user occupies the network: the Vision DAO itself. It also assumes that Vision DAO has an initial amount of storage space that it can provide unconditionally to its first users.

** Findings

***  Resistance

In experimentation, we found that the single largest distinguishing factor for ensuring that users' data were being stored during contracts they took on was the *collateralization rate*.
The *collateralization rate* is defined by the Vision proof of storage protocol, and sets a minimum percentage (\(\rho\)) of the market value (\(\mu\)) of a storage contract that a provider must stake to accept it.

#+attr_latex: :placement [p]
#+caption: \(\rho = 0\)
#+name: fig:Figure 1
[[./assets/fs/no_collateral.png]]
#+attr_latex: :float nil
#+caption: \(\rho = 1\)
#+name: fig:Figure 2
[[./assets/fs/all_collateral.png]]


Displayed above in [[fig:Figure 1][figure 1]] where \(\rho = 0\), without any measures to ensure that users' files are intact, file storage providers are free to accept as many orders as they want, without paying for the underlying storage space. We consider this a form of theft, measured by, "storage stolen." Without these measures, virtually all storage space is stolen.
Comparatively, in [[fig:Figure 2][figure 2]] where \(\rho = 1\) as displayed above, meaning 100% of the market value of a contract must be staked by the provider, storage stolen is virtually zero.

*** Resilience and Reactivity

Although it presents an effective mechanism for deterring attacks, Vision's tokenomics proof of storage model does little to influence the rate at which providers of storage enter the network.
Rather, in our testing, it appears to be the case that the reactivity of the supply of storage on Vision due to an increase in demand (e.g., due to new users) is explained primarily by external factors.
Namely, an increase in the supply of storage on Vision was correlated with an increase in the efficiency of currency markets supplying VIS itself to outside parties hoping to provide storage on Vision. The dynamics of currency markets, and cryptocurrency markets in particular, are highly variable, and as such, data incorporating these factors are not yet available.

* Voting Model

Vision's voting features utilize the Enforcer-Jury system as a protocol that aims to provide security against Sybil attacks. The voting model tracks metrics regarding Vision's intra-Idea governance. The main metric categories are *utility* and *accuracy*. *Utility* is the ability of the Enforcer-Jury system to provide value to Vision users, and in this case whether or not users can cast votes in accordance to themselves; this is measured by the number of tokens voted towards Idea proposals per user. *Accuracy* describes the correctness of the Enforcer-Jury system and is measured by the rates of false positives and negatives when detecting a guilty party. Combining these two categories, understanding the *utility* and *accuracy* of the Enforcer-Jury system and thus voting features allows us to answer key performance questions such as "Is Vision governance legitimate?" And "Does Vision allow DAOs to safely grow?"

** Methodology

The voting model makes several assumptions about external factors that influence the decision-making of its users. These include:

- User Proclivity to Vote: The chances for a user to vote under specific circumstances
- User Spawn Rate: How often new users join the Vision network relative to idea and proposal creation
- Idea Spawn Rate: How often Vision users come up with Ideas that they govern via proposals
- Mean User Fraud Rate: Mean of the normal distribution describing a user's proclivity to commit voter fraud
- Enforcer Information: The amount the /actual/ voting event's legitimacy affects an enforcer's claim

This is not an exhaustive list of all the parameters and assumptions used in the voting model. A more comprehensive list can be found in the voting model's [[https://github.com/Vision-DAO/tokenomics/blob/main/models/actor_based/voting/analysis.org][analysis file]].

** Results

*** Utility

We found that willingness of users to vote on proposals increases exponentially with the passage of time, likely due to the increase in tokens acquired over time. It is also seen that the number of proposals passed increases proportionally to the total number created, however, the rate of proposals passed is lower than those that are not passed or are timed out.

[[file:assets/voting/utility.png]]

The above figure displays the exponential nature of the number of tokens voted per user, showing a strong desire for users to participate in proposals as they acquire the necessary tokens. It is important to note the relatively low rate of votes passing versus timing out (and thus not getting passed). Since we see a strong level of voting participation with the amounts of tokens spent, this is most likely due to a higher rate of proposal rejection rather than a lack of utility in Vision's voting mechanisms.

*** Accuracy

Experiments showed that accuracy increased over time, regardless of the *information* maintained by enforcers (\(I_{enforcer}\)) or jury members (\(I_{jury}\)). *Information* is how much more likely an enforcer or jury member will make a claim towards the actual legitimacy of the voting event. For example, if the voter is actually guilty, and \(I_{enforcer} = 0.5\) the enforcer is 50% more likely to claim guilty than with \(I_{enforcer} = 0\).

[[file:assets/voting/accuracy.png]]

The ratio of falsely innocent (the ratio of innocent-verdict voting events when the voter was guilty to total voting events) and falsely guilty (a similar ratio using the amount of false guilty verdicts) decreases over time, as shown above, when \(I_{enforcer} = 0.6\) and \(I_{jury} = 0.3\). The figure illustrates the steady decrease in these ratios, reflecting an increase in the accuracy of the voting system.
